{"version":3,"sources":["features/Boards/pages/ListBoards/index.js","features/Boards/components/Columns.js","features/Boards/pages/BoardDetail/index.js","features/Boards/index.js","features/Users/pages/LoginForm/index.js","features/Users/pages/Profile/index.js","features/Users/pages/RegisterForm/index.js","features/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["ListBoards","match","useState","listBoard","setListBoard","visibleAdd","setVisibleAdd","visibleEdit","setVisibleEdit","name","setName","boardId","setBoardId","history","useHistory","useEffect","a","axios","get","headers","authorization","localStorage","getItem","result","console","log","data","listBoards","fetchBoardList","handleAddOk","post","board_name","push","userId","handleEditOk","patch","map","board","board_id","updatedBoard","handleChange","e","target","value","handleDelete","delete","filter","deletedBoardId","size","index","title","bordered","style","width","actions","EditOutlined","onClick","editName","handleEdit","DeleteOutlined","BarsOutlined","handleViewDetail","visible","onOk","onCancel","placeholder","onChange","Column","col","listCard","setListCard","content","setContent","cardId","setCardId","columnId","listCards","fetchCards","column_id","card","updatedListCard","card_id","columnName","editContent","BoardDetail","boardInfo","setBoardInfo","params","res","status","fetchBoardInfo","columns","id","Board","path","exact","component","ListBoard","LoginForm","onFinish","values","accessToken","refreshToken","setItem","JSON","stringify","user","user_id","responseGoogle","response","tokenId","responseFacebook","userID","className","initialValues","remember","onFinishFailed","errorInfo","Item","rules","required","message","prefix","UserOutlined","LockOutlined","type","valuePropName","noStyle","href","htmlType","clientId","buttonText","onSuccess","onFailure","cookiePolicy","appId","fields","callback","layout","labelCol","span","wrapperCol","tailLayout","offset","Profile","Form","useForm","form","setUser","alertVisible","setAlertVisible","setFieldsValue","user_name","email","fetchUser","label","description","closable","showIcon","onClose","RegisterForm","alertType","setAlertType","alertMessage","setAlertMessage","repeat_password","password","MailOutlined","Password","User","App","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15807768.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Modal, Input, Card, Space } from \"antd\";\r\nimport { EditOutlined, DeleteOutlined, BarsOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import \"./style.css\";\r\n\r\nfunction ListBoards({ match }) {\r\n  // const { userId } = match.params;\r\n  const [listBoard, setListBoard] = useState([]);\r\n  const [visibleAdd, setVisibleAdd] = useState(false);\r\n  const [visibleEdit, setVisibleEdit] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [boardId, setBoardId] = useState(null);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchBoardList() {\r\n      // const result = await axios.get(\"http://localhost:3001/boards/\" + userId);\r\n      const result = await axios.get(\"http://localhost:3001/boards/\", {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`, //\"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n        },\r\n      });\r\n      console.log(result.data.data.listBoards);\r\n      setListBoard(result.data.data.listBoards);\r\n    }\r\n\r\n    fetchBoardList();\r\n  }, []);\r\n\r\n  // ADD\r\n  const handleAddBoard = () => {\r\n    setVisibleAdd(true);\r\n  };\r\n\r\n  const handleAddOk = async () => {\r\n    const result = await axios.post(\r\n      `http://localhost:3001/boards/`,\r\n      { board_name: name },\r\n      {\r\n        headers: {\r\n          authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`, //\"Bearer \" + localStorage.getItem(\"accessToken\"),\r\n        },\r\n      }\r\n    );\r\n\r\n    if (result) {\r\n      console.log(result.data.data.boardId);\r\n      history.push(\r\n        `/boards/${result.data.data.userId}/${result.data.data.boardId}`\r\n      );\r\n    }\r\n    setVisibleAdd(false);\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setName(\"\");\r\n    setVisibleAdd(false);\r\n  };\r\n\r\n  // EDIT\r\n  const handleEdit = (boardId) => {\r\n    setVisibleEdit(true);\r\n    const editName = listBoard\r\n      .filter((board) => {\r\n        return board.board_id === boardId;\r\n      })\r\n      .map((board) => board.board_name)[0];\r\n    console.log(editName);\r\n    setName(editName);\r\n    setBoardId(boardId);\r\n  };\r\n\r\n  const handleEditOk = async () => {\r\n    const result = await axios.patch(\r\n      `http://localhost:3001/boards/${boardId}`,\r\n      {\r\n        board_name: name,\r\n      }\r\n    );\r\n\r\n    setListBoard(\r\n      listBoard.map((board) => {\r\n        if (board.board_id === boardId) {\r\n          return result.data.data.updatedBoard;\r\n        }\r\n        return board;\r\n      })\r\n    );\r\n\r\n    console.log(listBoard);\r\n\r\n    setVisibleEdit(false);\r\n    setName(\"\");\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setName(\"\");\r\n    setVisibleEdit(false);\r\n  };\r\n\r\n  //\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"name\") {\r\n      setName(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (boardId) => {\r\n    const result = await axios.delete(\r\n      `http://localhost:3001/boards/${boardId}`,\r\n      {\r\n        userId: 1,\r\n      }\r\n    );\r\n\r\n    setListBoard(\r\n      listBoard.filter(\r\n        (board) => board.board_id !== +result.data.data.deletedBoardId\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleViewDetail = (boardId) => {\r\n    history.push(`/boards/${boardId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Space size=\"large\">\r\n        {listBoard &&\r\n          listBoard.map((board, index) => {\r\n            return (\r\n              <Card\r\n                key={index}\r\n                title={board.board_name}\r\n                bordered={true}\r\n                style={{ width: 300 }}\r\n                actions={[\r\n                  <EditOutlined\r\n                    key=\"edit\"\r\n                    onClick={() => handleEdit(board.board_id)}\r\n                  />,\r\n                  <DeleteOutlined\r\n                    key=\"delete\"\r\n                    onClick={() => handleDelete(board.board_id)}\r\n                  />,\r\n\r\n                  <BarsOutlined\r\n                    key=\"view\"\r\n                    onClick={() => handleViewDetail(board.board_id)}\r\n                  />,\r\n                ]}\r\n              >\r\n                {/* <p>{board.created_date}</p> */}\r\n              </Card>\r\n            );\r\n          })}\r\n      </Space>\r\n      <Button onClick={handleAddBoard}>Thêm</Button>\r\n      <Modal\r\n        title={\"Add Board\"}\r\n        visible={visibleAdd}\r\n        onOk={handleAddOk}\r\n        onCancel={handleAddCancel}\r\n      >\r\n        <Input\r\n          placeholder=\"Board Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        title={\"Edit Board\"}\r\n        visible={visibleEdit}\r\n        onOk={handleEditOk}\r\n        onCancel={handleEditCancel}\r\n      >\r\n        <Input\r\n          placeholder=\"Board Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n\r\n  //   const [boards, setBoards] = useState([]);\r\n\r\n  //   useEffect(() => {\r\n  //     async function fetchData() {\r\n  //       //   const fetchURL = \"https://sonnt-api-fun-retro.herokuapp.com/boards\";\r\n  //       const fetchURL = \"http://localhost:3001/boards\";\r\n  //       const response = await axios.get(fetchURL);\r\n  //       setBoards(response.data);\r\n  //     }\r\n\r\n  //     fetchData();\r\n  //   }, []);\r\n\r\n  //   return (\r\n  //     <ul className=\"list-boards\">\r\n  //       {boards.map((board) => (\r\n  //         <li key={board.board_id}>\r\n  //           <BoardItem\r\n  //             boardName={board.board_name}\r\n  //             boardCreatedDate={board.created_date}\r\n  //           />\r\n  //         </li>\r\n  //       ))}\r\n  //     </ul>\r\n  //   );\r\n}\r\n\r\nexport default ListBoards;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal, Input, Card, Space } from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  BarsOutlined,\r\n  FileDoneOutlined,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nconst Column = ({ col }) => {\r\n  const [listCard, setListCard] = useState([]);\r\n  const [visibleAdd, setVisibleAdd] = useState(false);\r\n  const [visibleEdit, setVisibleEdit] = useState(false);\r\n  const [content, setContent] = useState(\"\");\r\n  const [cardId, setCardId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Call api get card\r\n    const fetchCards = async () => {\r\n      console.log(col);\r\n      const result = await axios.get(\r\n        \"http://localhost:3001/columns/\" + col.columnId\r\n      );\r\n      console.log(result);\r\n      setListCard(result.data.data.listCards);\r\n    };\r\n    fetchCards();\r\n  }, []);\r\n\r\n  // ADD\r\n  const handleAddCard = () => {\r\n    setVisibleAdd(true);\r\n  };\r\n\r\n  const handleAddOk = async () => {\r\n    const result = await axios.post(\"http://localhost:3001/cards/\", {\r\n      column_id: col.columnId,\r\n      content: content,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    setListCard([...listCard, result.data.data.card]);\r\n    setContent(\"\");\r\n    setVisibleAdd(false);\r\n  };\r\n\r\n  const handleAddCancel = () => {\r\n    setContent(\"\");\r\n    setVisibleAdd(false);\r\n  };\r\n\r\n  // EDIT\r\n  const handleEdit = (cardId) => {\r\n    console.log(cardId);\r\n    setVisibleEdit(true);\r\n    const editContent = listCard.filter((card) => {\r\n      return card.card_id == cardId;\r\n    })[0].content;\r\n    console.log(editContent);\r\n    setContent(editContent);\r\n    setCardId(cardId);\r\n  };\r\n\r\n  const handleEditOk = async () => {\r\n    const result = await axios.patch(`http://localhost:3001/cards/${cardId}`, {\r\n      column_id: col.columnId,\r\n      content: content,\r\n    });\r\n\r\n    const updatedListCard = listCard.map((card) => {\r\n      if (card.card_id === cardId) {\r\n        return result.data.data.card;\r\n      }\r\n      return card;\r\n    });\r\n\r\n    setListCard(updatedListCard);\r\n    setContent(\"\");\r\n    setVisibleEdit(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setContent(\"\");\r\n    setVisibleEdit(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === \"content\") {\r\n      setContent(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (cardId) => {\r\n    const result = await axios.delete(`http://localhost:3001/cards/${cardId}`, {\r\n      userId: 1,\r\n    });\r\n\r\n    setListCard(listCard.filter((card) => card.card_id !== cardId));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>{col.columnName}</label>\r\n      <br />\r\n      <Button onClick={handleAddCard}>Add Card To Column</Button>\r\n      {listCard &&\r\n        listCard.map((card) => {\r\n          return (\r\n            <Card\r\n              key={card.card_id}\r\n              bordered={false}\r\n              style={{ width: 300 }}\r\n              size={\"default\"}\r\n              actions={[\r\n                <EditOutlined\r\n                  key=\"edit\"\r\n                  onClick={() => handleEdit(card.card_id)}\r\n                />,\r\n                <DeleteOutlined\r\n                  key=\"delete\"\r\n                  onClick={() => handleDelete(card.card_id)}\r\n                />,\r\n              ]}\r\n            >\r\n              <p>{card.content}</p>\r\n            </Card>\r\n          );\r\n        })}\r\n      <Modal\r\n        title=\"Add Card\"\r\n        visible={visibleAdd}\r\n        onOk={handleAddOk}\r\n        onCancel={handleAddCancel}\r\n      >\r\n        <Input\r\n          placeholder=\"Card Content\"\r\n          name=\"content\"\r\n          value={content}\r\n          onChange={handleChange}\r\n        />\r\n      </Modal>\r\n      <Modal\r\n        title=\"Edit Card\"\r\n        visible={visibleEdit}\r\n        onOk={handleEditOk}\r\n        onCancel={handleEditCancel}\r\n      >\r\n        <Input\r\n          placeholder=\"Card Content\"\r\n          name=\"content\"\r\n          value={content}\r\n          onChange={handleChange}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Column from \"../../components/Columns\";\r\n\r\nconst BoardDetail = ({ match }) => {\r\n  const [boardInfo, setBoardInfo] = useState({});\r\n  console.log(\"match: ----> \", match);\r\n  const { userId, boardId } = match.params;\r\n\r\n  useEffect(() => {\r\n    const fetchBoardInfo = async () => {\r\n      const res = await axios.get(\r\n        `http://localhost:3001/boards/${userId}/${boardId}/`\r\n      );\r\n\r\n      if (res.data.status === \"success\") {\r\n        console.log(res.data.data);\r\n        setBoardInfo(res.data.data.board);\r\n      }\r\n    };\r\n    fetchBoardInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{boardInfo.board_name}</h2>\r\n      {boardInfo.columns &&\r\n        boardInfo.columns.map((col, id) => <Column key={id} col={col} />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardDetail;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ListBoard from \"./pages/ListBoards\";\r\nimport BoardDetail from \"./pages/BoardDetail\";\r\n\r\nconst Board = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/boards/:userId\" exact component={ListBoard}></Route>\r\n      {/* <Route path=\"/boards\" exact component={ListBoard}></Route> */}\r\n      <Route\r\n        path=\"/boards/:userId/:boardId\"\r\n        exact\r\n        component={BoardDetail}\r\n      ></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { Form, Input, Button, Checkbox } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport FacebookLogin from \"react-facebook-login\";\r\nimport GoogleLogin from \"react-google-login\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n    try {\r\n      const res = await axios.post(\"http://localhost:3001/users/login\", values);\r\n\r\n      if (res.data.data.accessToken && res.data.data.refreshToken) {\r\n        localStorage.setItem(\r\n          \"accessToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n        localStorage.setItem(\r\n          \"refreshToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n      }\r\n\r\n      history.push(`/boards/${res.data.data.user.user_id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const responseGoogle = async (response) => {\r\n    console.log(response);\r\n    try {\r\n      // call api\r\n      const res = await axios.post(\"http://localhost:3001/users/google-login\", {\r\n        tokenId: response.tokenId,\r\n      });\r\n\r\n      // get response and save to local storage\r\n      if (res.data.data.accessToken && res.data.data.refreshToken) {\r\n        localStorage.setItem(\r\n          \"accessToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n        localStorage.setItem(\r\n          \"refreshToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n      }\r\n      //redirect to boards page\r\n      history.push(`/boards/${res.data.data.user.user_id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n\r\n    // if (res) {\r\n    //   console.log(\"response data: \", { res });\r\n    //   res.then(\r\n    //     (result) => {\r\n    //       console.log(result);\r\n    //       console.log(result.data.data.accessToken);\r\n    //       localStorage.setItem(\r\n    //         \"accessToken\",\r\n    //         JSON.stringify(result.data.data.accessToken)\r\n    //       );\r\n\r\n    //       history.push(`/boards/${result.data.data.user.user_id}`);\r\n    //     },\r\n    //     (err) => {\r\n    //       console.log(err);\r\n    //     }\r\n    //   );\r\n    // }\r\n  };\r\n\r\n  const responseFacebook = async (response) => {\r\n    console.log(response);\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:3001/users/facebook-login\",\r\n        {\r\n          accessToken: response.accessToken,\r\n          userID: response.userID,\r\n        }\r\n      );\r\n\r\n      if (res.data.data.accessToken && res.data.data.refreshToken) {\r\n        localStorage.setItem(\r\n          \"accessToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n        localStorage.setItem(\r\n          \"refreshToken\",\r\n          JSON.stringify(res.data.data.accessToken)\r\n        );\r\n      }\r\n\r\n      history.push(`/boards/${res.data.data.user.user_id}`);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <h1>Login</h1>\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Email!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          placeholder=\"Email\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Password!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n          <Checkbox>Remember me</Checkbox>\r\n        </Form.Item>\r\n\r\n        <a className=\"login-form-forgot\" href=\"\">\r\n          Forgot password\r\n        </a>\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n        Or <a href=\"\">register now!</a>\r\n      </Form.Item>\r\n\r\n      <GoogleLogin\r\n        clientId=\"365584952975-peumpl7kdkkqurb72c7n325lveopap25.apps.googleusercontent.com\"\r\n        buttonText=\"Login with Google\"\r\n        onSuccess={responseGoogle}\r\n        onFailure={responseGoogle}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      />\r\n\r\n      <FacebookLogin\r\n        appId=\"804911767017673\" //APP ID NOT CREATED YET\r\n        fields=\"name,email,picture\"\r\n        callback={responseFacebook}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { Button, Form, Input, Alert } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 8,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst Profile = ({ match }) => {\r\n  const [form] = Form.useForm();\r\n  const { userId } = match.params;\r\n\r\n  const [user, setUser] = useState({});\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const res = await axios.get(\"http://localhost:3001/users/\" + userId);\r\n\r\n      if (res.data.status === \"success\") {\r\n        console.log(res.data.data.user);\r\n        setUser(res.data.data.user);\r\n        form.setFieldsValue({\r\n          user_name: res.data.data.user.user_name,\r\n          email: res.data.data.user.email,\r\n        });\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const onFinish = async (values) => {\r\n    // values = { ...values, user_id: userId };\r\n    const res = await axios.patch(\r\n      `http://localhost:3001/users/${userId}`,\r\n      values\r\n    );\r\n\r\n    if (res.data.status === \"success\") {\r\n      setUser(res.data.data.user);\r\n      setAlertVisible(true);\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      form={form}\r\n      name=\"basic\"\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        label=\"Username\"\r\n        name=\"user_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item {...tailLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          UPDATE\r\n        </Button>\r\n      </Form.Item>\r\n\r\n      <Form.Item className=\"alert\">\r\n        {alertVisible && (\r\n          <Alert\r\n            message=\"Updated Successfully!\"\r\n            description=\"You have changed your information.\"\r\n            type=\"success\"\r\n            closable={true}\r\n            style={{ width: 500 }}\r\n            showIcon\r\n            onClose={() => {\r\n              setAlertVisible(false);\r\n            }}\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { Form, Input, Button, Alert } from \"antd\";\r\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nconst RegisterForm = () => {\r\n  const [alertVisible, setAlertVisible] = useState(false);\r\n  const [alertType, setAlertType] = useState(\"success\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(\"Received values of form: \", values);\r\n\r\n    if (values.repeat_password != values.password) {\r\n      setAlertType(\"error\");\r\n      setAlertMessage(\"Repeated password does not match with password!\");\r\n    } else {\r\n      try {\r\n        const res = await axios.post(\r\n          \"http://localhost:3001/users/register\",\r\n          values\r\n        );\r\n\r\n        console.log(res.data);\r\n        setAlertType(\"success\");\r\n        setAlertMessage(res.data.message);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setAlertType(\"error\");\r\n        setAlertMessage(err.message);\r\n      } finally {\r\n        setAlertVisible(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      // initialValues={{\r\n      //   remember: true,\r\n      // }}\r\n      onFinish={onFinish}\r\n    >\r\n      <h1>Register</h1>\r\n      <Form.Item\r\n        name=\"user_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Username!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n          placeholder=\"Username\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"email\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Email!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<MailOutlined className=\"site-form-item-icon\" />}\r\n          placeholder=\"Email\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Password!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"repeat_password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please input your Password!\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input.Password\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Repeat password\"\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Register\r\n        </Button>\r\n        Or <a href=\"\">Login now!</a>\r\n      </Form.Item>\r\n      {alertVisible && (\r\n        <Alert\r\n          message={alertMessage}\r\n          // description=\"You have changed your information.\"\r\n          type={alertType}\r\n          closable={true}\r\n          style={{ width: 500 }}\r\n          showIcon\r\n          onClose={() => {\r\n            setAlertVisible(false);\r\n          }}\r\n        />\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LoginForm from \"./pages/LoginForm\";\r\nimport Profile from \"./pages/Profile\";\r\nimport RegisterForm from \"./pages/RegisterForm\";\r\n\r\nconst User = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/users/login/\" exact component={LoginForm}></Route>\r\n      <Route path=\"/users/register\" exact component={RegisterForm}></Route>\r\n      <Route path=\"/users/:userId\" exact component={Profile}></Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Board from \"./features/Boards\";\nimport User from \"./features/Users\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route to=\"/boards\" component={Board} />\n      <Route to=\"/users\" component={User} />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}